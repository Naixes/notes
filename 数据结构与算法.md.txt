# 概念
从⼴义上讲，数据结构就是指⼀组数据的存储结构。算法就是操作数据的⼀组⽅法。
从狭义上讲，是指某些著名的数据结构和算法，⽐如队列、栈、堆、⼆分查找、动态规划等。
# 重点
-  复杂度分析
-  20个基础的数据结构与算法：
10个数据结构：数组、链表、栈、队列、散列表、⼆叉树、堆、跳表、图、Trie树；
10个算法：递归、排序、⼆分查找、搜索、哈希算法、贪⼼算法、分治算法、回溯算法、动态规划、字符串匹配算法。
# 复杂度分析
通过运行代码再进行监控和统计来评价算法的执行时间和内存占用的方法叫事后统计法，受测试环境和数据规模的影响较大，测试结果可能无法反映算法的性能
## 大O表示法
在不运行代码的情况下粗略的估计算法的执行效率
思路：将一行代码的执行时间假设为1个unit_time，计算算法的总执行时间。可以得出结论：代码的总执行时间 T(n) 和每行代码的执行次数 n 成正比，写成公式就是
`T(n) = O(f(n)) // f(n) `表示每行代码执行次数的总和

## 大O时间复杂度
实际上并不具体表示代码真正的执⾏时间，⽽是表示代码执⾏时间随数据规模增⻓的变化趋势，所以，也叫作渐进时间复杂度（asymptotic time complexity），简称时间复杂度。
### 分析方法
1. 只关注执行次数最多的一段代码

2. 加法法则：总复杂度等于量级最大的那段代码的复杂度
